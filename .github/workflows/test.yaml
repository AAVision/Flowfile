name: Run Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    # Cancel the job if it takes longer than 10 minutes.
    timeout-minutes: 10
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python -
          # Add Poetry to PATH
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          poetry --version

      - name: Cache Poetry Dependencies
        uses: actions/cache@v3
        with:
          # Cache Poetry's cache and the virtual environment created in the project folder.
          path: |
            ~/.cache/pypoetry
            .venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install Project Dependencies
        run: poetry install --no-interaction --no-ansi
        # We let Poetry create its own virtual environment for isolation.

      - name: Install Additional Packages (Airbyte)
        run: |
          # Install the Airbyte package using pip within the Poetry environment.
          poetry run pip install https://github.com/Edwardvaneechoud/PyAirbyte/releases/download/v0.20.1.flowfile2/airbyte-0.0.0-py3-none-any.whl

      - name: Display Docker Info (Optional)
        run: docker info
        # This helps verify that Docker is running for tests that depend on it.

      - name: Run Pytest for flowfile_worker
        run: |
          # Using --maxfail=1 to fail fast and --disable-warnings to reduce noise.
          # Optionally, add a timeout flag if using pytest-timeout (e.g., --timeout=60).
          poetry run pytest -s flowfile_worker/tests--disable-warnings

      - name: Run Pytest for flowfile_core
        run: |
          poetry run pytest -s flowfile_core/tests --disable-warnings
